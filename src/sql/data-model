// music collection database


// *** Example Queries ***

// Find all albums released between 2000 and 2010
select title, release_year from album
where release_year >= 2000 AND release_year <= 2010;

// Find all albums in database by the musician "Clark"
select artist.name, title, release_year from album
INNER JOIN artist ON artist.artist_id = album.artist_id
where artist.name = 'Clark';

// Find the number of unique artists in the database
select count(distinct artist_id) from inventory;

// Find the average number of albums each record label has released, ignoring 
// major record labels (g EMI) that have released more than 500 records.
select AVG(total_releases) from label
where total_releases < 500;

// List the title and artist of every album, sorted by release year chronologically
select title, artist.name, release_year from album
INNER JOIN artist ON artist.artist_id = album.artist_id
order by release_year asc;

// Get all the information about artists whose first album was released after 2000 that has had their database entry updated within the past year
select * from artist
where last_update > '2019-01-01' AND active_since > '2000';

// Find all album titles with the genre "IDM"
select title from album
INNER JOIN genre ON album.genre = genre.genre_id
where genre.name = 'IDM';

// Find all album titles where the genre contains the phrase "ambient"
select title from album
INNER JOIN genre ON album.genre = genre.genre_id
where genre.name ilike '%ambient%';

// Find the title of the album released on Warp Records that is NOT in the genre 'IDM'
select title from album
LEFT JOIN genre on album.genre = genre.genre_id
LEFT JOIN label on album.label_id = label.label_id
WHERE label.name = 'Warp Records' AND genre.name != 'IDM';

// Create Tables

CREATE TABLE inventory (
    inventory_id serial PRIMARY KEY,
    artist_id integer REFERENCES artist(artist_id),
    album_id integer REFERENCES album(album_id),
    date_added timestamp
)

CREATE TABLE album (
    album_id serial PRIMARY KEY,
    artist_id integer REFERENCES artist(artist_id),
    title VARCHAR(1000) NOT NULL,
    release_year smallint CHECK(release_year > 1900),
    label_id integer REFERENCES label(label_id),
    parental_advisory boolean,
    genre integer REFERENCES genre(genre_id)
)

CREATE TABLE genre (
    genre_id serial PRIMARY KEY,
    name VARCHAR(100)
)

CREATE TABLE artist (
    artist_id serial PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    active_since smallint CHECK(active_since > 1500),
    last_update timestamp
)

CREATE TABLE label (
    label_id serial PRIMARY KEY,
    name VARCHAR(200) NOT NULL,
    total_releases smallint
)

// Insert Data

INSERT INTO artist(name, active_since, last_update)
VALUES 
('Burial', 2005, '2019-12-20'),
('Amon Tobin', 1996, '2019-12-20'),
('Aphex Twin', 1992, '2019-12-20'),
('Blur', 1989, '2016-06-14'),
('Clark', 1992, '2019-12-20'),
('Moderat', 2002, '2019-12-20'),
('Apparat', 2001, '2019-12-20'),
('Orbital', 1989, '2017-10-21'),
('Four Tet', 1999, '2018-05-13'),
('Valiska', 2010, '2018-10-18'),
('Bicep', 2010, '2019-06-13'),
('Boards of Canada', 1987, '2017-09-11')
;

INSERT INTO label(name, total_releases)
VALUES 
('Warp Records', 214),
('Ninja Tune', 118),
('Parlophone', 619),
('EMI', 2073),
('Domino', 205),
('Text', 97),
('Hyperdub', 130),
('Internal', 201),
('BPitch Control', 95),
('Mute', 190)
;

INSERT INTO genre(name)
VALUES 
('Dubstep'),
('Ambient'),
('Britpop'),
('Modern Classical'),
('Electroacoustic'),
('Microhouse'),
('Folktronica'),
('Electronic'),
('Ambient Pop'),
('EDM'),
('IDM'),
('Glitch'),
('Jazz'),
('Minimal'),
('Techno'),
('Progressive Electronic')
;

// There's probably a better way to go about this, but couldn't find anything terribly convincing. You'd just use python/java/etc. to do this normally anyway.

INSERT INTO album(artist_id, title, release_year, label_id, parental_advisory, genre)
VALUES
((SELECT artist_id from artist WHERE name='Burial'), 'Untrue', 2007, (SELECT label_id from label WHERE name = 'Hyperdub'), false, (SELECT genre_id from genre WHERE name = 'Dubstep')),
((SELECT artist_id from artist WHERE name='Clark'), 'Body Riddle', 2006, (SELECT label_id from label WHERE name = 'Warp Records'), false, (SELECT genre_id from genre WHERE name = 'IDM')),
((SELECT artist_id from artist WHERE name='Clark'), 'Death Peak', 2017, (SELECT label_id from label WHERE name = 'Warp Records'), false, (SELECT genre_id from genre WHERE name = 'IDM')),
((SELECT artist_id from artist WHERE name='Amon Tobin'), 'Bricolage', 1997, (SELECT label_id from label WHERE name = 'Ninja Tune'), false, (SELECT genre_id from genre WHERE name = 'Jazz')),
((SELECT artist_id from artist WHERE name='Amon Tobin'), 'Permutation', 1998, (SELECT label_id from label WHERE name = 'Ninja Tune'), false, (SELECT genre_id from genre WHERE name = 'IDM')),
((SELECT artist_id from artist WHERE name='Amon Tobin'), 'Foley Room', 2007, (SELECT label_id from label WHERE name = 'Ninja Tune'), false, (SELECT genre_id from genre WHERE name = 'Electronic')),
((SELECT artist_id from artist WHERE name='Valiska'), 'On Pause', 2017, null, false, (SELECT genre_id from genre WHERE name = 'Ambient')),
((SELECT artist_id from artist WHERE name='Orbital'), 'Orbital [Brown Album]', 1993, (SELECT label_id from label WHERE name = 'Internal'), false, (SELECT genre_id from genre WHERE name = 'Techno')),
((SELECT artist_id from artist WHERE name='Blur'), 'The Magic Whip', 2015, (SELECT label_id from label WHERE name = 'Parlophone'), false, (SELECT genre_id from genre WHERE name = 'Britpop')),
((SELECT artist_id from artist WHERE name='Blur'), '13', 1999, (SELECT label_id from label WHERE name = 'EMI'), false, (SELECT genre_id from genre WHERE name = 'Britpop')),
((SELECT artist_id from artist WHERE name='Boards of Canada'), 'Geogaddi', 2002, (SELECT label_id from label WHERE name = 'Warp Records'), false, (SELECT genre_id from genre WHERE name = 'IDM')),
((SELECT artist_id from artist WHERE name='Boards of Canada'), 'Music Has the Right to Children', 1998, (SELECT label_id from label WHERE name = 'Warp Records'), false, (SELECT genre_id from genre WHERE name = 'IDM')),
((SELECT artist_id from artist WHERE name='Moderat'), 'Moderat', 2009, (SELECT label_id from label WHERE name = 'BPitch Control'), false, (SELECT genre_id from genre WHERE name = 'Electronic')),
((SELECT artist_id from artist WHERE name='Apparat'), 'LP5', 2019, (SELECT label_id from label WHERE name = 'Mute'), false, (SELECT genre_id from genre WHERE name = 'Ambient Pop')),
((SELECT artist_id from artist WHERE name='Bicep'), 'Bicep', 2017, (SELECT label_id from label WHERE name = 'Ninja Tune'), false, (SELECT genre_id from genre WHERE name = 'Electronic')),
((SELECT artist_id from artist WHERE name='Aphex Twin'), 'Syro', 2014, (SELECT label_id from label WHERE name = 'Warp Records'), false, (SELECT genre_id from genre WHERE name = 'IDM')),
((SELECT artist_id from artist WHERE name='Aphex Twin'), 'Selected Ambient Works Volume II', 1994, (SELECT label_id from label WHERE name = 'Warp Records'), false, (SELECT genre_id from genre WHERE name = 'Ambient'))
;

INSERT INTO inventory(artist_id, album_id, date_added)
VALUES
((SELECT artist_id from artist WHERE name='Burial'), (SELECT album_id from album WHERE title = 'Untrue'), now()::timestamp),
((SELECT artist_id from artist WHERE name='Four Tet'), (SELECT album_id from album WHERE title = 'New Energy'), now()::timestamp),
((SELECT artist_id from artist WHERE name='Valiska'), (SELECT album_id from album WHERE title = 'On Pause'), now()::timestamp),
((SELECT artist_id from artist WHERE name='Aphex Twin'), (SELECT album_id from album WHERE title = 'Selected Ambient Works Volume II'), now()::timestamp),
((SELECT artist_id from artist WHERE name='Aphex Twin'), (SELECT album_id from album WHERE title = 'Syro'), now()::timestamp),
((SELECT artist_id from artist WHERE name='Bicep'), (SELECT album_id from album WHERE title = 'Bicep'), now()::timestamp),
((SELECT artist_id from artist WHERE name='Moderat'), (SELECT album_id from album WHERE title = 'Moderat'), now()::timestamp),
((SELECT artist_id from artist WHERE name='Boards of Canada'), (SELECT album_id from album WHERE title = 'Music Has the Right to Children'), now()::timestamp),
((SELECT artist_id from artist WHERE name='Blur'), (SELECT album_id from album WHERE title = 'The Magic Whip'), now()::timestamp),
((SELECT artist_id from artist WHERE name='Amon Tobin'), (SELECT album_id from album WHERE title = 'Bricolage'), now()::timestamp),
((SELECT artist_id from artist WHERE name='Amon Tobin'), (SELECT album_id from album WHERE title = 'Foley Room'), now()::timestamp),
((SELECT artist_id from artist WHERE name='Clark'), (SELECT album_id from album WHERE title = 'Body Riddle'), now()::timestamp),
((SELECT artist_id from artist WHERE name='Clark'), (SELECT album_id from album WHERE title = 'Death Peak'), now()::timestamp)